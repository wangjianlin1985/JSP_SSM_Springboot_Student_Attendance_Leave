<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.AttendResultMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加考勤结果记录 -->
	<insert id="addAttendResult" parameterType="attendResult">
		insert into t_attendResult(arName) values 
		(#{arName})
	</insert>

	<!-- 按照查询条件分页查询考勤结果记录 -->
	<select id="queryAttendResult" resultMap="attendResultMap" >
		select t_attendResult.* from t_attendResult ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="attendResultMap" type="attendResult">
        <id property="arId" column="arId" />
    </resultMap>

    <!-- 按照查询条件查询所有考勤结果记录 -->
	<select id="queryAttendResultList" resultMap="attendResultMap" >
		select t_attendResult.* from t_attendResult ${where}
	</select>

    <!-- 按照查询条件的考勤结果记录数 -->
	<select id="queryAttendResultCount" resultType="int">
		select count(*) from t_attendResult ${where}
	</select>

	<!-- 根据主键查询某个考勤结果记录 -->
	<select id="getAttendResult" parameterType="int" resultMap="attendResultMap">
		select * from t_attendResult where t_attendResult.arId = #{arId}
	</select>

	<!-- 更新考勤结果记录 -->
	<update id="updateAttendResult" parameterType="attendResult">
		update t_attendResult set arName=#{arName} where arId = #{arId}
	</update>

	<!-- 删除考勤结果记录 -->
	<delete id="deleteAttendResult" parameterType="int">
		delete from t_attendResult where arId=#{arId}
	</delete>

</mapper>
